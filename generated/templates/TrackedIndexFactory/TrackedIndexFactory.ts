// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class TrackedIndexCreated extends ethereum.Event {
  get params(): TrackedIndexCreated__Params {
    return new TrackedIndexCreated__Params(this);
  }
}

export class TrackedIndexCreated__Params {
  _event: TrackedIndexCreated;

  constructor(event: TrackedIndexCreated) {
    this._event = event;
  }

  get index(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get assets(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }
}

export class TrackedIndexFactory__createIndexInput_nameDetailsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get symbol(): string {
    return this[1].toString();
  }

  get imageURI(): string {
    return this[2].toString();
  }
}

export class TrackedIndexFactory__defaultIndexTransferFeeResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class TrackedIndexFactory__indexTransferFeeResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class TrackedIndexFactory extends ethereum.SmartContract {
  static bind(address: Address): TrackedIndexFactory {
    return new TrackedIndexFactory("TrackedIndexFactory", address);
  }

  createIndex(
    _assets: Array<Address>,
    _nameDetails: TrackedIndexFactory__createIndexInput_nameDetailsStruct
  ): Address {
    let result = super.call(
      "createIndex",
      "createIndex(address[],(string,string,string)):(address)",
      [
        ethereum.Value.fromAddressArray(_assets),
        ethereum.Value.fromTuple(_nameDetails)
      ]
    );

    return result[0].toAddress();
  }

  try_createIndex(
    _assets: Array<Address>,
    _nameDetails: TrackedIndexFactory__createIndexInput_nameDetailsStruct
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createIndex",
      "createIndex(address[],(string,string,string)):(address)",
      [
        ethereum.Value.fromAddressArray(_assets),
        ethereum.Value.fromTuple(_nameDetails)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  defaultIndexTransferFee(): TrackedIndexFactory__defaultIndexTransferFeeResult {
    let result = super.call(
      "defaultIndexTransferFee",
      "defaultIndexTransferFee():(address,uint256)",
      []
    );

    return new TrackedIndexFactory__defaultIndexTransferFeeResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_defaultIndexTransferFee(): ethereum.CallResult<
    TrackedIndexFactory__defaultIndexTransferFeeResult
  > {
    let result = super.tryCall(
      "defaultIndexTransferFee",
      "defaultIndexTransferFee():(address,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TrackedIndexFactory__defaultIndexTransferFeeResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }

  indexTransferFee(
    _index: Address
  ): TrackedIndexFactory__indexTransferFeeResult {
    let result = super.call(
      "indexTransferFee",
      "indexTransferFee(address):(address,uint256)",
      [ethereum.Value.fromAddress(_index)]
    );

    return new TrackedIndexFactory__indexTransferFeeResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_indexTransferFee(
    _index: Address
  ): ethereum.CallResult<TrackedIndexFactory__indexTransferFeeResult> {
    let result = super.tryCall(
      "indexTransferFee",
      "indexTransferFee(address):(address,uint256)",
      [ethereum.Value.fromAddress(_index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TrackedIndexFactory__indexTransferFeeResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }

  rebalancingCredit(): Address {
    let result = super.call(
      "rebalancingCredit",
      "rebalancingCredit():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_rebalancingCredit(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "rebalancingCredit",
      "rebalancingCredit():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  registry(): Address {
    let result = super.call("registry", "registry():(address)", []);

    return result[0].toAddress();
  }

  try_registry(): ethereum.CallResult<Address> {
    let result = super.tryCall("registry", "registry():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sharedOwnershipCreatorImplementation(): Address {
    let result = super.call(
      "sharedOwnershipCreatorImplementation",
      "sharedOwnershipCreatorImplementation():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_sharedOwnershipCreatorImplementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "sharedOwnershipCreatorImplementation",
      "sharedOwnershipCreatorImplementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vault(): Address {
    let result = super.call("vault", "vault():(address)", []);

    return result[0].toAddress();
  }

  try_vault(): ethereum.CallResult<Address> {
    let result = super.tryCall("vault", "vault():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _registry(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _defaultFeeRecipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _defaultFeeInBP(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _rebalancingCredit(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _sharedOwnershipCreatorImplementation(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateIndexCall extends ethereum.Call {
  get inputs(): CreateIndexCall__Inputs {
    return new CreateIndexCall__Inputs(this);
  }

  get outputs(): CreateIndexCall__Outputs {
    return new CreateIndexCall__Outputs(this);
  }
}

export class CreateIndexCall__Inputs {
  _call: CreateIndexCall;

  constructor(call: CreateIndexCall) {
    this._call = call;
  }

  get _assets(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _nameDetails(): CreateIndexCall_nameDetailsStruct {
    return changetype<CreateIndexCall_nameDetailsStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class CreateIndexCall__Outputs {
  _call: CreateIndexCall;

  constructor(call: CreateIndexCall) {
    this._call = call;
  }

  get index(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateIndexCall_nameDetailsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get symbol(): string {
    return this[1].toString();
  }

  get imageURI(): string {
    return this[2].toString();
  }
}

export class SetDefaultIndexTransferFeeCall extends ethereum.Call {
  get inputs(): SetDefaultIndexTransferFeeCall__Inputs {
    return new SetDefaultIndexTransferFeeCall__Inputs(this);
  }

  get outputs(): SetDefaultIndexTransferFeeCall__Outputs {
    return new SetDefaultIndexTransferFeeCall__Outputs(this);
  }
}

export class SetDefaultIndexTransferFeeCall__Inputs {
  _call: SetDefaultIndexTransferFeeCall;

  constructor(call: SetDefaultIndexTransferFeeCall) {
    this._call = call;
  }

  get _feeRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _feeInBP(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetDefaultIndexTransferFeeCall__Outputs {
  _call: SetDefaultIndexTransferFeeCall;

  constructor(call: SetDefaultIndexTransferFeeCall) {
    this._call = call;
  }
}

export class SetIndexTransferFeeCall extends ethereum.Call {
  get inputs(): SetIndexTransferFeeCall__Inputs {
    return new SetIndexTransferFeeCall__Inputs(this);
  }

  get outputs(): SetIndexTransferFeeCall__Outputs {
    return new SetIndexTransferFeeCall__Outputs(this);
  }
}

export class SetIndexTransferFeeCall__Inputs {
  _call: SetIndexTransferFeeCall;

  constructor(call: SetIndexTransferFeeCall) {
    this._call = call;
  }

  get _index(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _feeRecipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _feeInBP(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class SetIndexTransferFeeCall__Outputs {
  _call: SetIndexTransferFeeCall;

  constructor(call: SetIndexTransferFeeCall) {
    this._call = call;
  }
}

export class SetSharedOwnershipCreatorImplementationCall extends ethereum.Call {
  get inputs(): SetSharedOwnershipCreatorImplementationCall__Inputs {
    return new SetSharedOwnershipCreatorImplementationCall__Inputs(this);
  }

  get outputs(): SetSharedOwnershipCreatorImplementationCall__Outputs {
    return new SetSharedOwnershipCreatorImplementationCall__Outputs(this);
  }
}

export class SetSharedOwnershipCreatorImplementationCall__Inputs {
  _call: SetSharedOwnershipCreatorImplementationCall;

  constructor(call: SetSharedOwnershipCreatorImplementationCall) {
    this._call = call;
  }

  get _sharedOwnershipCreatorImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSharedOwnershipCreatorImplementationCall__Outputs {
  _call: SetSharedOwnershipCreatorImplementationCall;

  constructor(call: SetSharedOwnershipCreatorImplementationCall) {
    this._call = call;
  }
}
