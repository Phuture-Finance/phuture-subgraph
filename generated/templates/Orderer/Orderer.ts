// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class PlaceOrder extends ethereum.Event {
  get params(): PlaceOrder__Params {
    return new PlaceOrder__Params(this);
  }
}

export class PlaceOrder__Params {
  _event: PlaceOrder;

  constructor(event: PlaceOrder) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UpdateOrder extends ethereum.Event {
  get params(): UpdateOrder__Params {
    return new UpdateOrder__Params(this);
  }
}

export class UpdateOrder__Params {
  _event: UpdateOrder;

  constructor(event: UpdateOrder) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get asset(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get share(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get isSellSide(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class Orderer__orderOfResultOrderStruct extends ethereum.Tuple {
  get uncompletedSellSideAssets(): BigInt {
    return this[0].toBigInt();
  }

  get assets(): Array<Orderer__orderOfResultOrderAssetsStruct> {
    return this[1].toTupleArray<Orderer__orderOfResultOrderAssetsStruct>();
  }
}

export class Orderer__orderOfResultOrderAssetsStruct extends ethereum.Tuple {
  get asset(): Address {
    return this[0].toAddress();
  }

  get side(): i32 {
    return this[1].toI32();
  }

  get shares(): BigInt {
    return this[2].toBigInt();
  }
}

export class Orderer extends ethereum.SmartContract {
  static bind(address: Address): Orderer {
    return new Orderer("Orderer", address);
  }

  orderOf(_account: Address): Orderer__orderOfResultOrderStruct {
    let result = super.call(
      "orderOf",
      "orderOf(address):((uint256,(address,uint8,uint256)[]))",
      [ethereum.Value.fromAddress(_account)]
    );

    return result[0].toTuple() as Orderer__orderOfResultOrderStruct;
  }

  try_orderOf(
    _account: Address
  ): ethereum.CallResult<Orderer__orderOfResultOrderStruct> {
    let result = super.tryCall(
      "orderOf",
      "orderOf(address):((uint256,(address,uint8,uint256)[]))",
      [ethereum.Value.fromAddress(_account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as Orderer__orderOfResultOrderStruct
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _registry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PlaceOrderCall extends ethereum.Call {
  get inputs(): PlaceOrderCall__Inputs {
    return new PlaceOrderCall__Inputs(this);
  }

  get outputs(): PlaceOrderCall__Outputs {
    return new PlaceOrderCall__Outputs(this);
  }
}

export class PlaceOrderCall__Inputs {
  _call: PlaceOrderCall;

  constructor(call: PlaceOrderCall) {
    this._call = call;
  }

  get _assets(): Array<PlaceOrderCall_assetsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      PlaceOrderCall_assetsStruct
    >();
  }
}

export class PlaceOrderCall__Outputs {
  _call: PlaceOrderCall;

  constructor(call: PlaceOrderCall) {
    this._call = call;
  }
}

export class PlaceOrderCall_assetsStruct extends ethereum.Tuple {
  get asset(): Address {
    return this[0].toAddress();
  }

  get side(): i32 {
    return this[1].toI32();
  }

  get shares(): BigInt {
    return this[2].toBigInt();
  }
}

export class ReduceOrderAssetCall extends ethereum.Call {
  get inputs(): ReduceOrderAssetCall__Inputs {
    return new ReduceOrderAssetCall__Inputs(this);
  }

  get outputs(): ReduceOrderAssetCall__Outputs {
    return new ReduceOrderAssetCall__Outputs(this);
  }
}

export class ReduceOrderAssetCall__Inputs {
  _call: ReduceOrderAssetCall;

  constructor(call: ReduceOrderAssetCall) {
    this._call = call;
  }

  get _asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newTotalSupply(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _oldTotalSupply(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ReduceOrderAssetCall__Outputs {
  _call: ReduceOrderAssetCall;

  constructor(call: ReduceOrderAssetCall) {
    this._call = call;
  }
}
