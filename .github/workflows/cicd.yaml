name: CICD

on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
      - develop
  pull_request:
    branches:
      - develop

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          path: './repoPath/'

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"

      - name: Build1
        run: cd ./repoPath/subgraphs/mvp && npm install --force && npm run codegen

      - name: Build2
        run: cd ./repoPath && cp -r node_modules/matchstick-as/ subgraphs/mvp/node_modules/

      - name: Build3
        run: cd ./repoPath/subgraphs/mvp && ln -s ../../node_modules/@graphprotocol/graph-cli/bin/graph .

      - name: Test
        run: cd ./repoPath/subgraphs/mvp && ./graph test

  cd:
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          path: './repoPath/'

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"

      - name: Build1
        run: cd ./repoPath/subgraphs/mvp && npm install --force && npm run codegen

      - name: Build2
        run: cd ./repoPath/subgraphs/mvp && ln -s ../../node_modules/@graphprotocol/graph-cli/bin/graph .

      - run: sudo mkdir -p /opt/certs

      - run: echo "$CLIENT_CRT" | sudo base64 --decode > /opt/certs/client-crt.pem
        env:
          CLIENT_CRT: ${{ secrets.CLIENT_CRT }}
      - run: echo "$CLIENT_KEY" | sudo base64 --decode > /opt/certs/client-key.pem
        env:
          CLIENT_KEY: ${{ secrets.CLIENT_KEY }}

      - run: sudo cp ./repoPath/deploy/deploy.conf /etc/nginx/conf.d

      - name: Run nginx
        run: sudo systemctl start nginx

      - name: Create
        run: cd ./repoPath/subgraphs/mvp && make cdcreate

      - name: Deploy
        run: cd ./repoPath/subgraphs/mvp && make cddeploy
