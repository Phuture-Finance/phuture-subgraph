// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SetEmission extends ethereum.Event {
  get params(): SetEmission__Params {
    return new SetEmission__Params(this);
  }
}

export class SetEmission__Params {
  _event: SetEmission;

  constructor(event: SetEmission) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get emission(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Stake extends ethereum.Event {
  get params(): Stake__Params {
    return new Stake__Params(this);
  }
}

export class Stake__Params {
  _event: Stake;

  constructor(event: Stake) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get rangeStartIndex(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get rangeEndIndex(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class Unstake extends ethereum.Event {
  get params(): Unstake__Params {
    return new Unstake__Params(this);
  }
}

export class Unstake__Params {
  _event: Unstake;

  constructor(event: Unstake) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get rewardInPHTR(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get exitFeeInPHTR(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class UnstakeRange extends ethereum.Event {
  get params(): UnstakeRange__Params {
    return new UnstakeRange__Params(this);
  }
}

export class UnstakeRange__Params {
  _event: UnstakeRange;

  constructor(event: UnstakeRange) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get unstakedAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get rangeStartIndex(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get rangeEndIndex(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class LiquidityMining extends ethereum.SmartContract {
  static bind(address: Address): LiquidityMining {
    return new LiquidityMining("LiquidityMining", address);
  }
}
